#include <Arduino.h>
#include <ESP8266WiFi.h>
#include <ESP8266WiFiMulti.h>
#include <ESP8266HTTPClient.h>
#include <WiFiClient.h>

//1

#include <Adafruit_MCP3008.h>
#include <HCSR04.h>

#define trig 5  // 트리거 핀 선언
#define echo 4    // 에코 핀 

Adafruit_MCP3008 adc;



ESP8266WiFiMulti WiFiMulti;
void setup() {
  Serial.begin(115200);

while (!Serial);
  Serial.println("MCP3008 simple test.");
  pinMode(trig, OUTPUT);    // 트리거 핀 출력으로 선언
  pinMode(echo, INPUT);     // 에코 핀 입력으로 선언
     adc.begin();
  Serial.println();
  Serial.println();
  Serial.println();
  for (uint8_t t = 4; t > 0; t--) {
    Serial.printf("[SETUP] WAIT %d...\n", t);
    Serial.flush();
    delay(1000);
  }
  
  WiFi.mode(WIFI_STA);
  WiFiMulti.addAP("MIT3", "12345678c");
}

void loop() {
  
    for (int chan=0; chan<3; chan++) {
    Serial.print(adc.readADC(chan)); Serial.print("\t");
    
    }
      long duration, distance;    // 거리 측정을 위한 변수 선언
    // 트리거 핀으로 10us 동안 펄스 출력
    digitalWrite(trig, LOW);        // Trig 핀 Low
    delayMicroseconds(2);            // 2us 딜레이
    digitalWrite(trig, HIGH);    // Trig 핀 High
    delayMicroseconds(10);            // 10us 딜레이
    digitalWrite(trig, LOW);        // Trig 핀 Low
  
    duration = pulseIn(echo, HIGH); 
    distance = duration * 170 / 10000;
    
    Serial.print(distance); // 거리를 시리얼 모니터에 출력
    Serial.print("cm"); Serial.print("\t");
      
    
    
  if ((WiFiMulti.run() == WL_CONNECTED)) {
    WiFiClient client;
    int value0 = adc.readADC(0); 
    int value1 = adc.readADC(1);
    int value2= adc.readADC(2);// 센서값 대입처리
    int value3= distance;
    
    String strVal0 = String(value0);
    String strVal1 = String(value1);
    String strVal2 = String(value2);
    String strVal3 = String(value3);
    String result = "http://192.168.3.18:8090/senser/ssin?mq2="+strVal0+"&mq7="+strVal1+"&vi="+strVal2+"&wave="+strVal3;   //보낼 URL 입력
    HTTPClient http;
    Serial.print("[HTTP] begin...\n");
    Serial.print(result);
    if (http.begin(client, result)) {  // HTTP
    Serial.print("[HTTP] GET...\n");
     
      int httpCode = http.GET();
      if (httpCode > 0) {
        Serial.printf("[HTTP] GET... code: %d\n", httpCode);
        if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_MOVED_PERMANENTLY) {
          String payload = http.getString();  //소스코드는 여기에 담겨온다.
          Serial.print(payload);
        }
      } else {
        Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
      }
      http.end();
    } else {
      Serial.printf("[HTTP} Unable to connect\n");
    }
  }

  delay(1000);
}
